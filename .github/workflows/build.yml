name: build

on:
  push:
    branches:
      - master
    tags:
      - "*-[0-9]+.*"
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux_64
          - os: ubuntu-22.04-arm
            platform: linux_arm64
          - os: macos-15-intel
            platform: osx_64
          - os: macos-latest
            platform: osx_arm64
          - os: windows-latest
            platform: windows_64
          - os: windows-11-arm
            platform: windows_arm64
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          # OpenJDK 17 is the oldest Java version available for Windows ARM64.
          java-version: 17
          distribution: zulu
          cache: maven

        # Ensure SWIG is available.
        # Note: Ubuntu runners have SWIG preinstalled.
      - name: Install SWIG (macOS)
        if: startsWith(matrix.os, 'macos')
        run: brew install swig
      - name: Install SWIG (Windows)
        if: startsWith(matrix.os, 'windows')
        run: choco install swig

      - name: Set up CI environment
        shell: bash
        run: .github/setup.sh

      - name: Execute the build
        shell: bash
        run: .github/build.sh

      - name: Upload platform artifacts
        uses: actions/upload-artifact@v4
        with:
          name: flimlib-${{ matrix.platform }}
          path: target/flimlib-*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.repository == 'flimlib/flimlib' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: zulu
          cache: maven

      - name: Set up CI environment
        shell: bash
        run: .github/setup.sh

      - name: Download all platform artifacts
        uses: actions/download-artifact@v4

      - name: Deploy aggregated artifacts
        shell: bash
        run: .github/deploy.sh
        env:
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_USER: ${{ secrets.MAVEN_USER }}
          MAVEN_PASS: ${{ secrets.MAVEN_PASS }}
          CENTRAL_USER: ${{ secrets.CENTRAL_USER }}
          CENTRAL_PASS: ${{ secrets.CENTRAL_PASS }}
          SIGNING_ASC: ${{ secrets.SIGNING_ASC }}
